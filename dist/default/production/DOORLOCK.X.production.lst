

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Mon Jan 29 15:48:12 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	12F1840
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 1.44
    25                           ; Generated 14/09/2017 GMT
    26                           ; 
    27                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC12F1840 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  008C                     	;# 
    85  0091                     	;# 
    86  0092                     	;# 
    87  0095                     	;# 
    88  0096                     	;# 
    89  0097                     	;# 
    90  0098                     	;# 
    91  0099                     	;# 
    92  009A                     	;# 
    93  009B                     	;# 
    94  009B                     	;# 
    95  009C                     	;# 
    96  009D                     	;# 
    97  009E                     	;# 
    98  010C                     	;# 
    99  0111                     	;# 
   100  0112                     	;# 
   101  0115                     	;# 
   102  0116                     	;# 
   103  0117                     	;# 
   104  0118                     	;# 
   105  0119                     	;# 
   106  011A                     	;# 
   107  011B                     	;# 
   108  011D                     	;# 
   109  011D                     	;# 
   110  018C                     	;# 
   111  0191                     	;# 
   112  0191                     	;# 
   113  0192                     	;# 
   114  0193                     	;# 
   115  0193                     	;# 
   116  0193                     	;# 
   117  0194                     	;# 
   118  0195                     	;# 
   119  0196                     	;# 
   120  0197                     	;# 
   121  0199                     	;# 
   122  019A                     	;# 
   123  019B                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019C                     	;# 
   128  019C                     	;# 
   129  019D                     	;# 
   130  019E                     	;# 
   131  019F                     	;# 
   132  020C                     	;# 
   133  0211                     	;# 
   134  0211                     	;# 
   135  0212                     	;# 
   136  0212                     	;# 
   137  0213                     	;# 
   138  0213                     	;# 
   139  0214                     	;# 
   140  0214                     	;# 
   141  0215                     	;# 
   142  0215                     	;# 
   143  0215                     	;# 
   144  0216                     	;# 
   145  0216                     	;# 
   146  0217                     	;# 
   147  0217                     	;# 
   148  0291                     	;# 
   149  0291                     	;# 
   150  0292                     	;# 
   151  0293                     	;# 
   152  0294                     	;# 
   153  0295                     	;# 
   154  0295                     	;# 
   155  0296                     	;# 
   156  0391                     	;# 
   157  0392                     	;# 
   158  0393                     	;# 
   159  039A                     	;# 
   160  039C                     	;# 
   161  039D                     	;# 
   162  039E                     	;# 
   163  039F                     	;# 
   164  0FE4                     	;# 
   165  0FE5                     	;# 
   166  0FE6                     	;# 
   167  0FE7                     	;# 
   168  0FE8                     	;# 
   169  0FE9                     	;# 
   170  0FEA                     	;# 
   171  0FEB                     	;# 
   172  0FED                     	;# 
   173  0FEE                     	;# 
   174  0FEF                     	;# 
   175  0000                     	;# 
   176  0001                     	;# 
   177  0002                     	;# 
   178  0003                     	;# 
   179  0004                     	;# 
   180  0005                     	;# 
   181  0006                     	;# 
   182  0007                     	;# 
   183  0008                     	;# 
   184  0009                     	;# 
   185  000A                     	;# 
   186  000B                     	;# 
   187  000C                     	;# 
   188  0011                     	;# 
   189  0012                     	;# 
   190  0015                     	;# 
   191  0016                     	;# 
   192  0016                     	;# 
   193  0017                     	;# 
   194  0018                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001B                     	;# 
   198  001C                     	;# 
   199  001E                     	;# 
   200  001F                     	;# 
   201  008C                     	;# 
   202  0091                     	;# 
   203  0092                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0097                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009B                     	;# 
   212  009C                     	;# 
   213  009D                     	;# 
   214  009E                     	;# 
   215  010C                     	;# 
   216  0111                     	;# 
   217  0112                     	;# 
   218  0115                     	;# 
   219  0116                     	;# 
   220  0117                     	;# 
   221  0118                     	;# 
   222  0119                     	;# 
   223  011A                     	;# 
   224  011B                     	;# 
   225  011D                     	;# 
   226  011D                     	;# 
   227  018C                     	;# 
   228  0191                     	;# 
   229  0191                     	;# 
   230  0192                     	;# 
   231  0193                     	;# 
   232  0193                     	;# 
   233  0193                     	;# 
   234  0194                     	;# 
   235  0195                     	;# 
   236  0196                     	;# 
   237  0197                     	;# 
   238  0199                     	;# 
   239  019A                     	;# 
   240  019B                     	;# 
   241  019B                     	;# 
   242  019B                     	;# 
   243  019B                     	;# 
   244  019C                     	;# 
   245  019C                     	;# 
   246  019D                     	;# 
   247  019E                     	;# 
   248  019F                     	;# 
   249  020C                     	;# 
   250  0211                     	;# 
   251  0211                     	;# 
   252  0212                     	;# 
   253  0212                     	;# 
   254  0213                     	;# 
   255  0213                     	;# 
   256  0214                     	;# 
   257  0214                     	;# 
   258  0215                     	;# 
   259  0215                     	;# 
   260  0215                     	;# 
   261  0216                     	;# 
   262  0216                     	;# 
   263  0217                     	;# 
   264  0217                     	;# 
   265  0291                     	;# 
   266  0291                     	;# 
   267  0292                     	;# 
   268  0293                     	;# 
   269  0294                     	;# 
   270  0295                     	;# 
   271  0295                     	;# 
   272  0296                     	;# 
   273  0391                     	;# 
   274  0392                     	;# 
   275  0393                     	;# 
   276  039A                     	;# 
   277  039C                     	;# 
   278  039D                     	;# 
   279  039E                     	;# 
   280  039F                     	;# 
   281  0FE4                     	;# 
   282  0FE5                     	;# 
   283  0FE6                     	;# 
   284  0FE7                     	;# 
   285  0FE8                     	;# 
   286  0FE9                     	;# 
   287  0FEA                     	;# 
   288  0FEB                     	;# 
   289  0FED                     	;# 
   290  0FEE                     	;# 
   291  0FEF                     	;# 
   292  0000                     	;# 
   293  0001                     	;# 
   294  0002                     	;# 
   295  0003                     	;# 
   296  0004                     	;# 
   297  0005                     	;# 
   298  0006                     	;# 
   299  0007                     	;# 
   300  0008                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0015                     	;# 
   308  0016                     	;# 
   309  0016                     	;# 
   310  0017                     	;# 
   311  0018                     	;# 
   312  0019                     	;# 
   313  001A                     	;# 
   314  001B                     	;# 
   315  001C                     	;# 
   316  001E                     	;# 
   317  001F                     	;# 
   318  008C                     	;# 
   319  0091                     	;# 
   320  0092                     	;# 
   321  0095                     	;# 
   322  0096                     	;# 
   323  0097                     	;# 
   324  0098                     	;# 
   325  0099                     	;# 
   326  009A                     	;# 
   327  009B                     	;# 
   328  009B                     	;# 
   329  009C                     	;# 
   330  009D                     	;# 
   331  009E                     	;# 
   332  010C                     	;# 
   333  0111                     	;# 
   334  0112                     	;# 
   335  0115                     	;# 
   336  0116                     	;# 
   337  0117                     	;# 
   338  0118                     	;# 
   339  0119                     	;# 
   340  011A                     	;# 
   341  011B                     	;# 
   342  011D                     	;# 
   343  011D                     	;# 
   344  018C                     	;# 
   345  0191                     	;# 
   346  0191                     	;# 
   347  0192                     	;# 
   348  0193                     	;# 
   349  0193                     	;# 
   350  0193                     	;# 
   351  0194                     	;# 
   352  0195                     	;# 
   353  0196                     	;# 
   354  0197                     	;# 
   355  0199                     	;# 
   356  019A                     	;# 
   357  019B                     	;# 
   358  019B                     	;# 
   359  019B                     	;# 
   360  019B                     	;# 
   361  019C                     	;# 
   362  019C                     	;# 
   363  019D                     	;# 
   364  019E                     	;# 
   365  019F                     	;# 
   366  020C                     	;# 
   367  0211                     	;# 
   368  0211                     	;# 
   369  0212                     	;# 
   370  0212                     	;# 
   371  0213                     	;# 
   372  0213                     	;# 
   373  0214                     	;# 
   374  0214                     	;# 
   375  0215                     	;# 
   376  0215                     	;# 
   377  0215                     	;# 
   378  0216                     	;# 
   379  0216                     	;# 
   380  0217                     	;# 
   381  0217                     	;# 
   382  0291                     	;# 
   383  0291                     	;# 
   384  0292                     	;# 
   385  0293                     	;# 
   386  0294                     	;# 
   387  0295                     	;# 
   388  0295                     	;# 
   389  0296                     	;# 
   390  0391                     	;# 
   391  0392                     	;# 
   392  0393                     	;# 
   393  039A                     	;# 
   394  039C                     	;# 
   395  039D                     	;# 
   396  039E                     	;# 
   397  039F                     	;# 
   398  0FE4                     	;# 
   399  0FE5                     	;# 
   400  0FE6                     	;# 
   401  0FE7                     	;# 
   402  0FE8                     	;# 
   403  0FE9                     	;# 
   404  0FEA                     	;# 
   405  0FEB                     	;# 
   406  0FED                     	;# 
   407  0FEE                     	;# 
   408  0FEF                     	;# 
   409                           
   410                           	psect	idataBANK0
   411  0246                     __pidataBANK0:	
   412                           
   413                           ;initializer for _code
   414  0246  3402               	retlw	2
   415  0247  3402               	retlw	2
   416  0248  3400               	retlw	0
   417                           
   418                           ;initializer for _timerLength
   419  0249  3414               	retlw	20
   420  024A  3400               	retlw	0
   421                           
   422                           ;initializer for _knockEnded
   423  024B  3401               	retlw	1
   424                           
   425                           ;initializer for _sensitivity
   426  024C  3485               	retlw	133
   427                           
   428                           ;initializer for _codeLength
   429  024D  3403               	retlw	3
   430  0015                     _TMR0	set	21
   431  000B                     _INTCON	set	11
   432  000C                     _PORTA	set	12
   433  005F                     _GIE	set	95
   434  005A                     _TMR0IF	set	90
   435  009C                     _ADRESH	set	156
   436  0097                     _WDTCON	set	151
   437  008C                     _TRISA	set	140
   438  009E                     _ADCON1	set	158
   439  009D                     _ADCON0	set	157
   440  0095                     _OPTION_REG	set	149
   441  0099                     _OSCCON	set	153
   442  04E9                     _GO	set	1257
   443  04E8                     _ADON	set	1256
   444  010C                     _LATA	set	268
   445  0865                     _LATA5	set	2149
   446  0862                     _LATA2	set	2146
   447  0860                     _LATA0	set	2144
   448  018C                     _ANSELA	set	396
   449  020C                     _WPUA	set	524
   450                           
   451                           ; #config settings
   452  0000                     
   453                           	psect	cinit
   454  001B                     start_initialization:	
   455  001B                     __initialization:	
   456                           
   457                           ; Initialize objects allocated to BANK0
   458  001B  3046               	movlw	low __pidataBANK0
   459  001C  0084               	movwf	4
   460  001D  3082               	movlw	(high __pidataBANK0)| (0+128)
   461  001E  0085               	movwf	5
   462  001F  302B               	movlw	low __pdataBANK0
   463  0020  0086               	movwf	6
   464  0021  3000               	movlw	high __pdataBANK0
   465  0022  0087               	movwf	7
   466  0023  3008               	movlw	8
   467  0024  3182  224E         	fcall	init_ram
   468                           
   469                           ; Clear objects allocated to COMMON
   470  0026  01FA               	clrf	__pbssCOMMON& (0+127)
   471                           
   472                           ; Clear objects allocated to BANK0
   473  0027  01A0               	clrf	__pbssBANK0& (0+127)
   474  0028  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   475  0029  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   476  002A  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   477  002B  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   478  002C  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   479  002D  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   480  002E  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   481  002F  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   482  0030  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   483  0031  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   484  0032                     end_of_initialization:	
   485                           ;End of C runtime variable initialization code
   486                           
   487  0032                     __end_of__initialization:	
   488  0032  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   489  0033  0020               	movlb	0
   490  0034  3181  2990         	ljmp	_main	;jump to C main() function
   491                           
   492                           	psect	bssCOMMON
   493  007A                     __pbssCOMMON:	
   494  007A                     _i:	
   495  007A                     	ds	1
   496                           
   497                           	psect	bssBANK0
   498  0020                     __pbssBANK0:	
   499  0020                     _knocks:	
   500  0020                     	ds	6
   501  0026                     _time:	
   502  0026                     	ds	2
   503  0028                     _isCounting:	
   504  0028                     	ds	1
   505  0029                     _knockIndex:	
   506  0029                     	ds	1
   507  002A                     _micInput:	
   508  002A                     	ds	1
   509                           
   510                           	psect	dataBANK0
   511  002B                     __pdataBANK0:	
   512  002B                     _code:	
   513  002B                     	ds	3
   514  002E                     _timerLength:	
   515  002E                     	ds	2
   516  0030                     _knockEnded:	
   517  0030                     	ds	1
   518  0031                     _sensitivity:	
   519  0031                     	ds	1
   520  0032                     _codeLength:	
   521  0032                     	ds	1
   522                           
   523                           	psect	inittext
   524  024E                     init_ram:	
   525  024E  00FE               	movwf	126
   526  024F                     initloop:	
   527  024F  0012               	moviw fsr0++
   528  0250  001E               	movwi fsr1++
   529  0251  0BFE               	decfsz	126,f
   530  0252  2A4F               	goto	initloop
   531  0253  3400               	retlw	0
   532                           
   533                           	psect	cstackCOMMON
   534  0070                     __pcstackCOMMON:	
   535  0070                     ?_init:	
   536  0070                     ?_checkInterrupt:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ??_checkInterrupt:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ?_adConvert:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ?_unlock:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ?_isCorrect:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ?_playKnock:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ?_checkKnocks:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ?_main:	
   558                           ; 1 bytes @ 0x0
   559                           
   560                           
   561                           ; 2 bytes @ 0x0
   562  0070                     	ds	1
   563  0071                     ??_init:	
   564  0071                     ??_adConvert:	
   565                           ; 1 bytes @ 0x1
   566                           
   567  0071                     ?_beep:	
   568                           ; 1 bytes @ 0x1
   569                           
   570  0071                     ??_unlock:	
   571                           ; 1 bytes @ 0x1
   572                           
   573  0071                     ?___wmul:	
   574                           ; 1 bytes @ 0x1
   575                           
   576  0071                     adConvert@chan:	
   577                           ; 2 bytes @ 0x1
   578                           
   579  0071                     beep@cycles:	
   580                           ; 1 bytes @ 0x1
   581                           
   582  0071                     ___wmul@multiplier:	
   583                           ; 1 bytes @ 0x1
   584                           
   585                           
   586                           ; 2 bytes @ 0x1
   587  0071                     	ds	1
   588  0072                     ??_beep:	
   589                           
   590                           ; 1 bytes @ 0x2
   591  0072                     	ds	1
   592  0073                     beep@period:	
   593  0073                     unlock@duration:	
   594                           ; 1 bytes @ 0x3
   595                           
   596  0073                     ___wmul@multiplicand:	
   597                           ; 1 bytes @ 0x3
   598                           
   599                           
   600                           ; 2 bytes @ 0x3
   601  0073                     	ds	1
   602  0074                     beep@i:	
   603                           
   604                           ; 1 bytes @ 0x4
   605  0074                     	ds	1
   606  0075                     ??___wmul:	
   607  0075                     beep@t:	
   608                           ; 1 bytes @ 0x5
   609                           
   610  0075                     ___wmul@product:	
   611                           ; 1 bytes @ 0x5
   612                           
   613                           
   614                           ; 2 bytes @ 0x5
   615  0075                     	ds	1
   616  0076                     ??_playKnock:	
   617                           
   618                           ; 1 bytes @ 0x6
   619  0076                     	ds	1
   620  0077                     ??_checkKnocks:	
   621  0077                     playKnock@j:	
   622                           ; 1 bytes @ 0x7
   623                           
   624                           
   625                           ; 1 bytes @ 0x7
   626  0077                     	ds	2
   627  0079                     ??_main:	
   628                           
   629                           ; 1 bytes @ 0x9
   630  0079                     	ds	1
   631                           
   632                           	psect	cstackBANK0
   633  0033                     __pcstackBANK0:	
   634  0033                     ??_isCorrect:	
   635                           
   636                           ; 1 bytes @ 0x0
   637  0033                     	ds	6
   638                           
   639                           	psect	maintext
   640  0190                     __pmaintext:	
   641 ;;
   642 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   643 ;;
   644 ;; *************** function _main *****************
   645 ;; Defined at:
   646 ;;		line 149 in file "DoorLockMain.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;		None
   649 ;; Auto vars:     Size  Location     Type
   650 ;;		None
   651 ;; Return value:  Size  Location     Type
   652 ;;                  2  137[None  ] int 
   653 ;; Registers used:
   654 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   655 ;; Tracked objects:
   656 ;;		On entry : B1F/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   660 ;;      Params:         0       0       0       0
   661 ;;      Locals:         0       0       0       0
   662 ;;      Temps:          1       0       0       0
   663 ;;      Totals:         1       0       0       0
   664 ;;Total ram usage:        1 bytes
   665 ;; Hardware stack levels required when called:    4
   666 ;; This function calls:
   667 ;;		_adConvert
   668 ;;		_checkKnocks
   669 ;;		_init
   670 ;;		_playKnock
   671 ;;		_unlock
   672 ;; This function is called by:
   673 ;;		Startup code after reset
   674 ;; This function uses a non-reentrant model
   675 ;;
   676                           
   677                           
   678                           ;psect for function _main
   679  0190                     _main:	
   680                           
   681                           ;DoorLockMain.c: 150: init();
   682                           
   683                           ;incstack = 0
   684                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   685  0190  3181  21E2  3181   	fcall	_init
   686                           
   687                           ;DoorLockMain.c: 151: TMR0 = 100;
   688  0193  3064               	movlw	100
   689  0194  0020               	movlb	0	; select bank0
   690  0195  0095               	movwf	21	;volatile
   691                           
   692                           ;DoorLockMain.c: 153: _delay((unsigned long)((200)*(32000000/4000000.0)));
   693  0196  30E4               	movlw	228
   694  0197                     u737:	
   695  0197  3200               	nop2
   696  0198  3200               	nop2
   697  0199  0B89               	decfsz	9,f
   698  019A  2997               	goto	u737
   699  019B  3200               	nop2
   700  019C  3200               	nop2
   701                           
   702                           ;DoorLockMain.c: 154: unlock(1);
   703  019D  3001               	movlw	1
   704  019E  3181  21B9  3181   	fcall	_unlock
   705                           
   706                           ;DoorLockMain.c: 155: (GIE = 1);
   707  01A1  178B               	bsf	11,7	;volatile
   708                           
   709                           ;DoorLockMain.c: 156: playKnock();
   710  01A2  3181  2166  3181   	fcall	_playKnock
   711  01A5                     l1066:	
   712                           ;DoorLockMain.c: 157: while (1) {
   713                           
   714                           
   715                           ;DoorLockMain.c: 158: micInput = adConvert(0b00001100);
   716  01A5  300C               	movlw	12
   717  01A6  3182  2232  3181   	fcall	_adConvert
   718  01A9  00F9               	movwf	??_main
   719  01AA  0879               	movf	??_main,w
   720  01AB  0020               	movlb	0	; select bank0
   721  01AC  00AA               	movwf	_micInput
   722                           
   723                           ;DoorLockMain.c: 159: if(micInput >= sensitivity){
   724  01AD  0831               	movf	_sensitivity,w
   725  01AE  022A               	subwf	_micInput,w
   726  01AF  1C03               	skipc
   727  01B0  29B4               	goto	l1072
   728                           
   729                           ;DoorLockMain.c: 161: checkKnocks();
   730  01B1  3180  20F3  3181   	fcall	_checkKnocks
   731  01B4                     l1072:	
   732                           
   733                           ;DoorLockMain.c: 162: }
   734                           ;DoorLockMain.c: 163: _delay((unsigned long)((20)*(32000000/4000000.0)));
   735  01B4  3035               	movlw	53
   736  01B5                     u747:	
   737  01B5  0B89               	decfsz	9,f
   738  01B6  29B5               	goto	u747
   739  01B7  0000               	nop
   740  01B8  29A5               	goto	l1066
   741  01B9                     __end_of_main:	
   742                           
   743                           	psect	text1
   744  0166                     __ptext1:	
   745 ;; *************** function _playKnock *****************
   746 ;; Defined at:
   747 ;;		line 110 in file "DoorLockMain.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;		None
   750 ;; Auto vars:     Size  Location     Type
   751 ;;  j               1    7[COMMON] unsigned char 
   752 ;; Return value:  Size  Location     Type
   753 ;;                  1    wreg      void 
   754 ;; Registers used:
   755 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   761 ;;      Params:         0       0       0       0
   762 ;;      Locals:         1       0       0       0
   763 ;;      Temps:          1       0       0       0
   764 ;;      Totals:         2       0       0       0
   765 ;;Total ram usage:        2 bytes
   766 ;; Hardware stack levels used:    1
   767 ;; Hardware stack levels required when called:    2
   768 ;; This function calls:
   769 ;;		_beep
   770 ;; This function is called by:
   771 ;;		_main
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           
   776                           ;psect for function _playKnock
   777  0166                     _playKnock:	
   778                           
   779                           ;DoorLockMain.c: 111: for(i = 0; i != codeLength; i++){
   780                           
   781                           ;incstack = 0
   782                           ; Regs used in _playKnock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   783  0166  01FA               	clrf	_i
   784  0167                     l922:	
   785  0167  087A               	movf	_i,w
   786  0168  0020               	movlb	0	; select bank0
   787  0169  0632               	xorwf	_codeLength,w
   788  016A  1903               	btfsc	3,2
   789  016B  0008               	return
   790                           
   791                           ;DoorLockMain.c: 112: beep(200,200);
   792  016C  30C8               	movlw	200
   793  016D  00F6               	movwf	??_playKnock
   794  016E  0876               	movf	??_playKnock,w
   795  016F  00F1               	movwf	beep@cycles
   796  0170  30C8               	movlw	200
   797  0171  3182  2218  3181   	fcall	_beep
   798                           
   799                           ;DoorLockMain.c: 113: for(unsigned char j = code[i]; j != 0; j--){
   800  0174  087A               	movf	_i,w
   801  0175  3E2B               	addlw	(low (_code| 0))& (0+255)
   802  0176  0086               	movwf	6
   803  0177  0187               	clrf	7
   804  0178  0801               	movf	1,w
   805  0179  00F6               	movwf	??_playKnock
   806  017A  0876               	movf	??_playKnock,w
   807  017B  00F7               	movwf	playKnock@j
   808  017C  0877               	movf	playKnock@j,w
   809  017D  1903               	btfsc	3,2
   810  017E  298B               	goto	l920
   811  017F                     l914:	
   812                           
   813                           ;DoorLockMain.c: 114: _delay((unsigned long)((20)*(32000000/4000.0)));
   814  017F  30D0               	movlw	208
   815  0180  00F6               	movwf	??_playKnock
   816  0181  30CA               	movlw	202
   817  0182                     u757:	
   818  0182  0B89               	decfsz	9,f
   819  0183  2982               	goto	u757
   820  0184  0BF6               	decfsz	??_playKnock,f
   821  0185  2982               	goto	u757
   822  0186  3001               	movlw	1
   823  0187  02F7               	subwf	playKnock@j,f
   824  0188  0877               	movf	playKnock@j,w
   825  0189  1D03               	btfss	3,2
   826  018A  297F               	goto	l914
   827  018B                     l920:	
   828  018B  3001               	movlw	1
   829  018C  00F6               	movwf	??_playKnock
   830  018D  0876               	movf	??_playKnock,w
   831  018E  07FA               	addwf	_i,f
   832  018F  2967               	goto	l922
   833  0190                     __end_of_playKnock:	
   834                           
   835                           	psect	text2
   836  01E2                     __ptext2:	
   837 ;; *************** function _init *****************
   838 ;; Defined at:
   839 ;;		line 12 in file "DoorLock.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;		None
   842 ;; Auto vars:     Size  Location     Type
   843 ;;		None
   844 ;; Return value:  Size  Location     Type
   845 ;;                  1    wreg      void 
   846 ;; Registers used:
   847 ;;		wreg, status,2
   848 ;; Tracked objects:
   849 ;;		On entry : 0/0
   850 ;;		On exit  : 0/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   853 ;;      Params:         0       0       0       0
   854 ;;      Locals:         0       0       0       0
   855 ;;      Temps:          0       0       0       0
   856 ;;      Totals:         0       0       0       0
   857 ;;Total ram usage:        0 bytes
   858 ;; Hardware stack levels used:    1
   859 ;; Hardware stack levels required when called:    1
   860 ;; This function calls:
   861 ;;		Nothing
   862 ;; This function is called by:
   863 ;;		_main
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           
   868                           ;psect for function _init
   869  01E2                     _init:	
   870                           
   871                           ;DoorLock.c: 15: OSCCON = 0b01101000;
   872                           
   873                           ;incstack = 0
   874                           ; Regs used in _init: [wreg+status,2]
   875  01E2  3068               	movlw	104
   876  01E3  0021               	movlb	1	; select bank1
   877  01E4  0099               	movwf	25	;volatile
   878                           
   879                           ;DoorLock.c: 19: OPTION_REG = 0b00010001;
   880  01E5  3011               	movlw	17
   881  01E6  0095               	movwf	21	;volatile
   882                           
   883                           ;DoorLock.c: 21: PORTA = 0;
   884  01E7  0020               	movlb	0	; select bank0
   885  01E8  018C               	clrf	12	;volatile
   886                           
   887                           ;DoorLock.c: 22: LATA = 0;
   888  01E9  0022               	movlb	2	; select bank2
   889  01EA  018C               	clrf	12	;volatile
   890                           
   891                           ;DoorLock.c: 23: ANSELA = 0b00010000;
   892  01EB  3010               	movlw	16
   893  01EC  0023               	movlb	3	; select bank3
   894  01ED  008C               	movwf	12	;volatile
   895                           
   896                           ;DoorLock.c: 24: ADCON0 = 0b00000000;
   897  01EE  0021               	movlb	1	; select bank1
   898  01EF  019D               	clrf	29	;volatile
   899                           
   900                           ;DoorLock.c: 25: ADCON1 = 0b01100000;
   901  01F0  3060               	movlw	96
   902  01F1  009E               	movwf	30	;volatile
   903                           
   904                           ;DoorLock.c: 26: TRISA = 0b00011010;
   905  01F2  301A               	movlw	26
   906  01F3  008C               	movwf	12	;volatile
   907                           
   908                           ;DoorLock.c: 27: WPUA = 0b00000010;
   909  01F4  3002               	movlw	2
   910  01F5  0024               	movlb	4	; select bank4
   911  01F6  008C               	movwf	12	;volatile
   912                           
   913                           ;DoorLock.c: 29: WDTCON = 0b00001010;
   914  01F7  300A               	movlw	10
   915  01F8  0021               	movlb	1	; select bank1
   916  01F9  0097               	movwf	23	;volatile
   917                           
   918                           ;DoorLock.c: 33: INTCON = 0b00100000;
   919  01FA  3020               	movlw	32
   920  01FB  008B               	movwf	11	;volatile
   921  01FC  0008               	return
   922  01FD                     __end_of_init:	
   923                           
   924                           	psect	text3
   925  00F3                     __ptext3:	
   926 ;; *************** function _checkKnocks *****************
   927 ;; Defined at:
   928 ;;		line 119 in file "DoorLockMain.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;		None
   931 ;; Auto vars:     Size  Location     Type
   932 ;;		None
   933 ;; Return value:  Size  Location     Type
   934 ;;                  1    wreg      void 
   935 ;; Registers used:
   936 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   942 ;;      Params:         0       0       0       0
   943 ;;      Locals:         0       0       0       0
   944 ;;      Temps:          2       0       0       0
   945 ;;      Totals:         2       0       0       0
   946 ;;Total ram usage:        2 bytes
   947 ;; Hardware stack levels used:    1
   948 ;; Hardware stack levels required when called:    3
   949 ;; This function calls:
   950 ;;		_adConvert
   951 ;;		_beep
   952 ;;		_isCorrect
   953 ;;		_unlock
   954 ;; This function is called by:
   955 ;;		_main
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959                           
   960                           ;psect for function _checkKnocks
   961  00F3                     _checkKnocks:	
   962                           
   963                           ;DoorLockMain.c: 120: _delay((unsigned long)((15)*(32000000/4000.0)));
   964                           
   965                           ;incstack = 0
   966                           ; Regs used in _checkKnocks: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   967  00F3  309C               	movlw	156
   968  00F4  00F7               	movwf	??_checkKnocks
   969  00F5  30D7               	movlw	215
   970  00F6                     u767:	
   971  00F6  0B89               	decfsz	9,f
   972  00F7  28F6               	goto	u767
   973  00F8  0BF7               	decfsz	??_checkKnocks,f
   974  00F9  28F6               	goto	u767
   975  00FA  0000               	nop
   976                           
   977                           ;DoorLockMain.c: 121: for(i = codeLength; i != 0; i--){
   978  00FB  0020               	movlb	0	; select bank0
   979  00FC  0832               	movf	_codeLength,w
   980  00FD  00F7               	movwf	??_checkKnocks
   981  00FE  0877               	movf	??_checkKnocks,w
   982  00FF  00FA               	movwf	_i
   983  0100                     l1028:	
   984  0100  087A               	movf	_i,w
   985  0101  1903               	btfsc	3,2
   986  0102  290E               	goto	l1030
   987                           
   988                           ;DoorLockMain.c: 122: knocks[i-1] = 0;
   989  0103  357A               	lslf	_i,w
   990  0104  3EFE               	addlw	254
   991  0105  3E20               	addlw	(low (_knocks| 0))& (0+255)
   992  0106  0086               	movwf	6
   993  0107  0187               	clrf	7
   994  0108  3000               	movlw	0
   995  0109  3FC0               	movwi [0]fsr1
   996  010A  3FC1               	movwi [1]fsr1
   997  010B  3001               	movlw	1
   998  010C  02FA               	subwf	_i,f
   999  010D  2900               	goto	l1028
  1000  010E                     l1030:	
  1001                           
  1002                           ;DoorLockMain.c: 123: }
  1003                           ;DoorLockMain.c: 124: knockIndex = 0;
  1004  010E  0020               	movlb	0	; select bank0
  1005  010F  01A9               	clrf	_knockIndex
  1006                           
  1007                           ;DoorLockMain.c: 125: isCounting = 1;
  1008  0110  01A8               	clrf	_isCounting
  1009  0111  0AA8               	incf	_isCounting,f
  1010                           
  1011                           ;DoorLockMain.c: 126: time = 0;
  1012  0112  01A6               	clrf	_time
  1013  0113  01A7               	clrf	_time+1
  1014                           
  1015                           ;DoorLockMain.c: 127: while(time != 2000 && knockIndex + 1 != codeLength) {
  1016  0114  293D               	goto	l1046
  1017  0115                     l1034:	
  1018                           
  1019                           ;DoorLockMain.c: 128: micInput = adConvert(0b00001100);
  1020  0115  300C               	movlw	12
  1021  0116  3182  2232  3180   	fcall	_adConvert
  1022  0119  00F7               	movwf	??_checkKnocks
  1023  011A  0877               	movf	??_checkKnocks,w
  1024  011B  0020               	movlb	0	; select bank0
  1025  011C  00AA               	movwf	_micInput
  1026                           
  1027                           ;DoorLockMain.c: 129: if(micInput >= sensitivity){
  1028  011D  0831               	movf	_sensitivity,w
  1029  011E  022A               	subwf	_micInput,w
  1030  011F  1C03               	skipc
  1031  0120  293D               	goto	l1046
  1032                           
  1033                           ;DoorLockMain.c: 130: knocks[knockIndex] = time*2;
  1034  0121  0827               	movf	_time+1,w
  1035  0122  00F8               	movwf	??_checkKnocks+1
  1036  0123  0826               	movf	_time,w
  1037  0124  00F7               	movwf	??_checkKnocks
  1038  0125  35F7               	lslf	??_checkKnocks,f
  1039  0126  0DF8               	rlf	??_checkKnocks+1,f
  1040  0127  3529               	lslf	_knockIndex,w
  1041  0128  3E20               	addlw	(low (_knocks| 0))& (0+255)
  1042  0129  0086               	movwf	6
  1043  012A  0187               	clrf	7
  1044  012B  0877               	movf	??_checkKnocks,w
  1045  012C  3FC0               	movwi [0]fsr1
  1046  012D  0878               	movf	??_checkKnocks+1,w
  1047  012E  3FC1               	movwi [1]fsr1
  1048                           
  1049                           ;DoorLockMain.c: 131: knockIndex++;
  1050  012F  3001               	movlw	1
  1051  0130  00F7               	movwf	??_checkKnocks
  1052  0131  0877               	movf	??_checkKnocks,w
  1053  0132  07A9               	addwf	_knockIndex,f
  1054                           
  1055                           ;DoorLockMain.c: 132: time = 0;
  1056  0133  01A6               	clrf	_time
  1057  0134  01A7               	clrf	_time+1
  1058                           
  1059                           ;DoorLockMain.c: 133: _delay((unsigned long)((15)*(32000000/4000.0)));
  1060  0135  309C               	movlw	156
  1061  0136  00F7               	movwf	??_checkKnocks
  1062  0137  30D7               	movlw	215
  1063  0138                     u777:	
  1064  0138  0B89               	decfsz	9,f
  1065  0139  2938               	goto	u777
  1066  013A  0BF7               	decfsz	??_checkKnocks,f
  1067  013B  2938               	goto	u777
  1068  013C  0000               	nop
  1069  013D                     l1046:	
  1070  013D  30D0               	movlw	208
  1071  013E  0020               	movlb	0	; select bank0
  1072  013F  0626               	xorwf	_time,w
  1073  0140  3007               	movlw	7
  1074  0141  1903               	skipnz
  1075  0142  0627               	xorwf	_time+1,w
  1076  0143  1903               	btfsc	3,2
  1077  0144  2951               	goto	l1050
  1078  0145  0829               	movf	_knockIndex,w
  1079  0146  3E01               	addlw	1
  1080  0147  00F7               	movwf	??_checkKnocks
  1081  0148  3000               	movlw	0
  1082  0149  1803               	skipnc
  1083  014A  3001               	movlw	1
  1084  014B  00F8               	movwf	??_checkKnocks+1
  1085  014C  0832               	movf	_codeLength,w
  1086  014D  0677               	xorwf	??_checkKnocks,w
  1087  014E  0478               	iorwf	??_checkKnocks+1,w
  1088  014F  1D03               	skipz
  1089  0150  2915               	goto	l1034
  1090  0151                     l1050:	
  1091                           
  1092                           ;DoorLockMain.c: 134: }
  1093                           ;DoorLockMain.c: 139: }
  1094                           ;DoorLockMain.c: 141: isCounting = 0;
  1095  0151  01A8               	clrf	_isCounting
  1096                           
  1097                           ;DoorLockMain.c: 142: time = 0;
  1098  0152  01A6               	clrf	_time
  1099  0153  01A7               	clrf	_time+1
  1100                           
  1101                           ;DoorLockMain.c: 143: if(isCorrect()){
  1102  0154  3180  2036  3180   	fcall	_isCorrect
  1103  0157  3A00               	xorlw	0
  1104  0158  1903               	skipnz
  1105  0159  0008               	return
  1106                           
  1107                           ;DoorLockMain.c: 144: unlock(3);
  1108  015A  3003               	movlw	3
  1109  015B  3181  21B9  3180   	fcall	_unlock
  1110                           
  1111                           ;DoorLockMain.c: 145: beep(200, 200);
  1112  015E  30C8               	movlw	200
  1113  015F  00F7               	movwf	??_checkKnocks
  1114  0160  0877               	movf	??_checkKnocks,w
  1115  0161  00F1               	movwf	beep@cycles
  1116  0162  30C8               	movlw	200
  1117  0163  3182  2218         	fcall	_beep
  1118  0165  0008               	return
  1119  0166                     __end_of_checkKnocks:	
  1120                           
  1121                           	psect	text4
  1122  01B9                     __ptext4:	
  1123 ;; *************** function _unlock *****************
  1124 ;; Defined at:
  1125 ;;		line 74 in file "DoorLockMain.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;  duration        1    wreg     unsigned char 
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  duration        1    3[COMMON] unsigned char 
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		wreg, status,2, status,0
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1139 ;;      Params:         0       0       0       0
  1140 ;;      Locals:         1       0       0       0
  1141 ;;      Temps:          2       0       0       0
  1142 ;;      Totals:         3       0       0       0
  1143 ;;Total ram usage:        3 bytes
  1144 ;; Hardware stack levels used:    1
  1145 ;; Hardware stack levels required when called:    1
  1146 ;; This function calls:
  1147 ;;		Nothing
  1148 ;; This function is called by:
  1149 ;;		_checkKnocks
  1150 ;;		_main
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           
  1155                           ;psect for function _unlock
  1156  01B9                     _unlock:	
  1157                           
  1158                           ;incstack = 0
  1159                           ; Regs used in _unlock: [wreg+status,2+status,0]
  1160                           ;unlock@duration stored from wreg
  1161  01B9  00F3               	movwf	unlock@duration
  1162                           
  1163                           ;DoorLockMain.c: 75: LATA2 = 1;
  1164  01BA  0022               	movlb	2	; select bank2
  1165  01BB  150C               	bsf	12,2	;volatile
  1166                           
  1167                           ;DoorLockMain.c: 76: LATA5 = 1;
  1168  01BC  168C               	bsf	12,5	;volatile
  1169                           
  1170                           ;DoorLockMain.c: 77: for(i = duration; i != 0; i--){
  1171  01BD  0873               	movf	unlock@duration,w
  1172  01BE  00F1               	movwf	??_unlock
  1173  01BF  0871               	movf	??_unlock,w
  1174  01C0  00FA               	movwf	_i
  1175  01C1                     l846:	
  1176  01C1  087A               	movf	_i,w
  1177  01C2  1903               	btfsc	3,2
  1178  01C3  29D2               	goto	l96
  1179                           
  1180                           ;DoorLockMain.c: 78: _delay((unsigned long)((125)*(32000000/4000.0)));
  1181  01C4  3006               	movlw	6
  1182  01C5  00F2               	movwf	??_unlock+1
  1183  01C6  3013               	movlw	19
  1184  01C7  00F1               	movwf	??_unlock
  1185  01C8  30AE               	movlw	174
  1186  01C9                     u787:	
  1187  01C9  0B89               	decfsz	9,f
  1188  01CA  29C9               	goto	u787
  1189  01CB  0BF1               	decfsz	??_unlock,f
  1190  01CC  29C9               	goto	u787
  1191  01CD  0BF2               	decfsz	??_unlock+1,f
  1192  01CE  29C9               	goto	u787
  1193  01CF  3001               	movlw	1
  1194  01D0  02FA               	subwf	_i,f
  1195  01D1  29C1               	goto	l846
  1196  01D2                     l96:	
  1197                           
  1198                           ;DoorLockMain.c: 79: }
  1199                           ;DoorLockMain.c: 80: LATA5 = 0;
  1200  01D2  0022               	movlb	2	; select bank2
  1201  01D3  128C               	bcf	12,5	;volatile
  1202                           
  1203                           ;DoorLockMain.c: 81: LATA2 = 0;
  1204  01D4  110C               	bcf	12,2	;volatile
  1205                           
  1206                           ;DoorLockMain.c: 82: _delay((unsigned long)((200)*(32000000/4000.0)));
  1207  01D5  3009               	movlw	9
  1208  01D6  00F2               	movwf	??_unlock+1
  1209  01D7  301E               	movlw	30
  1210  01D8  00F1               	movwf	??_unlock
  1211  01D9  30E4               	movlw	228
  1212  01DA                     u797:	
  1213  01DA  0B89               	decfsz	9,f
  1214  01DB  29DA               	goto	u797
  1215  01DC  0BF1               	decfsz	??_unlock,f
  1216  01DD  29DA               	goto	u797
  1217  01DE  0BF2               	decfsz	??_unlock+1,f
  1218  01DF  29DA               	goto	u797
  1219  01E0  3200               	nop2
  1220  01E1  0008               	return
  1221  01E2                     __end_of_unlock:	
  1222                           
  1223                           	psect	text5
  1224  0036                     __ptext5:	
  1225 ;; *************** function _isCorrect *****************
  1226 ;; Defined at:
  1227 ;;		line 85 in file "DoorLockMain.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;		None
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;		None
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  1    wreg      unsigned char 
  1234 ;; Registers used:
  1235 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1241 ;;      Params:         0       0       0       0
  1242 ;;      Locals:         0       0       0       0
  1243 ;;      Temps:          0       6       0       0
  1244 ;;      Totals:         0       6       0       0
  1245 ;;Total ram usage:        6 bytes
  1246 ;; Hardware stack levels used:    1
  1247 ;; Hardware stack levels required when called:    2
  1248 ;; This function calls:
  1249 ;;		___wmul
  1250 ;; This function is called by:
  1251 ;;		_checkKnocks
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           
  1256                           ;psect for function _isCorrect
  1257  0036                     _isCorrect:	
  1258                           
  1259                           ;DoorLockMain.c: 86: if(knockIndex + 1 != codeLength) {
  1260                           
  1261                           ;incstack = 0
  1262                           ; Regs used in _isCorrect: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1263  0036  0020               	movlb	0	; select bank0
  1264  0037  0829               	movf	_knockIndex,w
  1265  0038  3E01               	addlw	1
  1266  0039  00B3               	movwf	??_isCorrect
  1267  003A  3000               	movlw	0
  1268  003B  1803               	skipnc
  1269  003C  3001               	movlw	1
  1270  003D  00B4               	movwf	??_isCorrect+1
  1271  003E  0832               	movf	_codeLength,w
  1272  003F  0633               	xorwf	??_isCorrect,w
  1273  0040  0434               	iorwf	??_isCorrect+1,w
  1274  0041  1903               	skipnz
  1275  0042  2845               	goto	l992
  1276                           
  1277                           ;DoorLockMain.c: 87: return 0;
  1278  0043  3000               	movlw	0
  1279  0044  0008               	return
  1280  0045                     l992:	
  1281                           
  1282                           ;DoorLockMain.c: 88: }
  1283                           ;DoorLockMain.c: 89: knockIndex = 0;
  1284  0045  01A9               	clrf	_knockIndex
  1285                           
  1286                           ;DoorLockMain.c: 90: for(i = 0; i != codeLength; i--){
  1287  0046  01FA               	clrf	_i
  1288  0047                     l1016:	
  1289  0047  087A               	movf	_i,w
  1290  0048  0632               	xorwf	_codeLength,w
  1291  0049  1903               	btfsc	3,2
  1292  004A  28EB               	goto	l1018
  1293                           
  1294                           ;DoorLockMain.c: 91: if(knocks[i] > code[i]*timerLength){
  1295  004B  357A               	lslf	_i,w
  1296  004C  3E20               	addlw	(low (_knocks| 0))& (0+255)
  1297  004D  0086               	movwf	6
  1298  004E  0187               	clrf	7
  1299  004F  3F40               	moviw [0]fsr1
  1300  0050  00B3               	movwf	??_isCorrect
  1301  0051  3F41               	moviw [1]fsr1
  1302  0052  00B4               	movwf	??_isCorrect+1
  1303  0053  087A               	movf	_i,w
  1304  0054  3E2B               	addlw	(low (_code| 0))& (0+255)
  1305  0055  0086               	movwf	6
  1306  0056  0187               	clrf	7
  1307  0057  0801               	movf	1,w
  1308  0058  00B5               	movwf	??_isCorrect+2
  1309  0059  01B6               	clrf	??_isCorrect+3
  1310  005A  0835               	movf	??_isCorrect+2,w
  1311  005B  00F1               	movwf	___wmul@multiplier
  1312  005C  0836               	movf	??_isCorrect+3,w
  1313  005D  00F2               	movwf	___wmul@multiplier+1
  1314  005E  082F               	movf	_timerLength+1,w
  1315  005F  00F4               	movwf	___wmul@multiplicand+1
  1316  0060  082E               	movf	_timerLength,w
  1317  0061  00F3               	movwf	___wmul@multiplicand
  1318  0062  3181  21FD  3180   	fcall	___wmul
  1319  0065  0020               	movlb	0	; select bank0
  1320  0066  0834               	movf	??_isCorrect+1,w
  1321  0067  0272               	subwf	?___wmul+1,w
  1322  0068  1D03               	skipz
  1323  0069  286C               	goto	u605
  1324  006A  0833               	movf	??_isCorrect,w
  1325  006B  0271               	subwf	?___wmul,w
  1326  006C                     u605:	
  1327  006C  1803               	skipnc
  1328  006D  28A0               	goto	l1004
  1329                           
  1330                           ;DoorLockMain.c: 92: if(knocks[i]-timerLength/2 <= code[i]*timerLength){
  1331  006E  357A               	lslf	_i,w
  1332  006F  3E20               	addlw	(low (_knocks| 0))& (0+255)
  1333  0070  0086               	movwf	6
  1334  0071  0187               	clrf	7
  1335  0072  082F               	movf	_timerLength+1,w
  1336  0073  00B4               	movwf	??_isCorrect+1
  1337  0074  082E               	movf	_timerLength,w
  1338  0075  00B3               	movwf	??_isCorrect
  1339  0076  36B4               	lsrf	??_isCorrect+1,f
  1340  0077  0CB3               	rrf	??_isCorrect,f
  1341  0078  09B3               	comf	??_isCorrect,f
  1342  0079  09B4               	comf	??_isCorrect+1,f
  1343  007A  0AB3               	incf	??_isCorrect,f
  1344  007B  1903               	skipnz
  1345  007C  0AB4               	incf	??_isCorrect+1,f
  1346  007D  3F40               	moviw [0]fsr1
  1347  007E  0733               	addwf	??_isCorrect,w
  1348  007F  00B5               	movwf	??_isCorrect+2
  1349  0080  3F41               	moviw [1]fsr1
  1350  0081  3D34               	addwfc	??_isCorrect+1,w
  1351  0082  00B6               	movwf	??_isCorrect+3
  1352  0083  087A               	movf	_i,w
  1353  0084  3E2B               	addlw	(low (_code| 0))& (0+255)
  1354  0085  0086               	movwf	6
  1355  0086  0187               	clrf	7
  1356  0087  0801               	movf	1,w
  1357  0088  00B7               	movwf	??_isCorrect+4
  1358  0089  01B8               	clrf	??_isCorrect+5
  1359  008A  0837               	movf	??_isCorrect+4,w
  1360  008B  00F1               	movwf	___wmul@multiplier
  1361  008C  0838               	movf	??_isCorrect+5,w
  1362  008D  00F2               	movwf	___wmul@multiplier+1
  1363  008E  082F               	movf	_timerLength+1,w
  1364  008F  00F4               	movwf	___wmul@multiplicand+1
  1365  0090  082E               	movf	_timerLength,w
  1366  0091  00F3               	movwf	___wmul@multiplicand
  1367  0092  3181  21FD  3180   	fcall	___wmul
  1368  0095  0020               	movlb	0	; select bank0
  1369  0096  0836               	movf	??_isCorrect+3,w
  1370  0097  0272               	subwf	?___wmul+1,w
  1371  0098  1D03               	skipz
  1372  0099  289C               	goto	u615
  1373  009A  0835               	movf	??_isCorrect+2,w
  1374  009B  0271               	subwf	?___wmul,w
  1375  009C                     u615:	
  1376  009C  1803               	btfsc	3,0
  1377  009D  28E4               	goto	l1014
  1378                           
  1379                           ;DoorLockMain.c: 95: return 0;
  1380                           
  1381                           ;DoorLockMain.c: 94: } else {
  1382                           
  1383                           ;DoorLockMain.c: 93: knockIndex++;
  1384  009E  3000               	movlw	0
  1385  009F  0008               	return
  1386  00A0                     l1004:	
  1387                           ;DoorLockMain.c: 96: }
  1388                           ;DoorLockMain.c: 97: } else if(knocks[i] != code[i]){
  1389                           
  1390  00A0  357A               	lslf	_i,w
  1391  00A1  3E20               	addlw	(low (_knocks| 0))& (0+255)
  1392  00A2  0086               	movwf	6
  1393  00A3  0187               	clrf	7
  1394  00A4  3F40               	moviw [0]fsr1
  1395  00A5  00B3               	movwf	??_isCorrect
  1396  00A6  3F41               	moviw [1]fsr1
  1397  00A7  00B4               	movwf	??_isCorrect+1
  1398  00A8  087A               	movf	_i,w
  1399  00A9  3E2B               	addlw	(low (_code| 0))& (0+255)
  1400  00AA  0086               	movwf	6
  1401  00AB  0187               	clrf	7
  1402  00AC  0801               	movf	1,w
  1403  00AD  00B5               	movwf	??_isCorrect+2
  1404  00AE  01B6               	clrf	??_isCorrect+3
  1405  00AF  0834               	movf	??_isCorrect+1,w
  1406  00B0  0636               	xorwf	??_isCorrect+3,w
  1407  00B1  1D03               	skipz
  1408  00B2  28B5               	goto	u625
  1409  00B3  0833               	movf	??_isCorrect,w
  1410  00B4  0635               	xorwf	??_isCorrect+2,w
  1411  00B5                     u625:	
  1412  00B5  1903               	skipnz
  1413  00B6  28E4               	goto	l1014
  1414                           
  1415                           ;DoorLockMain.c: 98: if(knocks[i]+timerLength/2 >= code[i]*timerLength){
  1416  00B7  087A               	movf	_i,w
  1417  00B8  3E2B               	addlw	(low (_code| 0))& (0+255)
  1418  00B9  0086               	movwf	6
  1419  00BA  0187               	clrf	7
  1420  00BB  0801               	movf	1,w
  1421  00BC  00B3               	movwf	??_isCorrect
  1422  00BD  01B4               	clrf	??_isCorrect+1
  1423  00BE  0833               	movf	??_isCorrect,w
  1424  00BF  00F1               	movwf	___wmul@multiplier
  1425  00C0  0834               	movf	??_isCorrect+1,w
  1426  00C1  00F2               	movwf	___wmul@multiplier+1
  1427  00C2  082F               	movf	_timerLength+1,w
  1428  00C3  00F4               	movwf	___wmul@multiplicand+1
  1429  00C4  082E               	movf	_timerLength,w
  1430  00C5  00F3               	movwf	___wmul@multiplicand
  1431  00C6  3181  21FD  3180   	fcall	___wmul
  1432  00C9  357A               	lslf	_i,w
  1433  00CA  3E20               	addlw	(low (_knocks| 0))& (0+255)
  1434  00CB  0086               	movwf	6
  1435  00CC  0187               	clrf	7
  1436  00CD  0020               	movlb	0	; select bank0
  1437  00CE  082F               	movf	_timerLength+1,w
  1438  00CF  00B6               	movwf	??_isCorrect+3
  1439  00D0  082E               	movf	_timerLength,w
  1440  00D1  00B5               	movwf	??_isCorrect+2
  1441  00D2  36B6               	lsrf	??_isCorrect+3,f
  1442  00D3  0CB5               	rrf	??_isCorrect+2,f
  1443  00D4  3F40               	moviw [0]fsr1
  1444  00D5  0735               	addwf	??_isCorrect+2,w
  1445  00D6  00B7               	movwf	??_isCorrect+4
  1446  00D7  3F41               	moviw [1]fsr1
  1447  00D8  3D36               	addwfc	??_isCorrect+3,w
  1448  00D9  00B8               	movwf	??_isCorrect+5
  1449  00DA  0872               	movf	?___wmul+1,w
  1450  00DB  0238               	subwf	??_isCorrect+5,w
  1451  00DC  1D03               	skipz
  1452  00DD  28E0               	goto	u635
  1453  00DE  0871               	movf	?___wmul,w
  1454  00DF  0237               	subwf	??_isCorrect+4,w
  1455  00E0                     u635:	
  1456  00E0  1803               	btfsc	3,0
  1457  00E1  28E4               	goto	l1014
  1458                           
  1459                           ;DoorLockMain.c: 101: return 0;
  1460                           
  1461                           ;DoorLockMain.c: 100: } else {
  1462                           
  1463                           ;DoorLockMain.c: 99: knockIndex++;
  1464  00E2  3000               	movlw	0
  1465  00E3  0008               	return
  1466  00E4                     l1014:	
  1467                           ;DoorLockMain.c: 102: }
  1468                           ;DoorLockMain.c: 103: } else {
  1469                           
  1470                           
  1471                           ;DoorLockMain.c: 104: knockIndex++;
  1472  00E4  3001               	movlw	1
  1473  00E5  00B3               	movwf	??_isCorrect
  1474  00E6  0833               	movf	??_isCorrect,w
  1475  00E7  07A9               	addwf	_knockIndex,f
  1476  00E8  3001               	movlw	1
  1477  00E9  02FA               	subwf	_i,f
  1478  00EA  2847               	goto	l1016
  1479  00EB                     l1018:	
  1480                           
  1481                           ;DoorLockMain.c: 105: }
  1482                           ;DoorLockMain.c: 106: }
  1483                           ;DoorLockMain.c: 107: return knockIndex == codeLength;
  1484  00EB  0829               	movf	_knockIndex,w
  1485  00EC  0632               	xorwf	_codeLength,w
  1486  00ED  1D03               	btfss	3,2
  1487  00EE  28F1               	goto	u650
  1488  00EF  3001               	movlw	1
  1489  00F0  0008               	return
  1490  00F1                     u650:	
  1491  00F1  3000               	movlw	0
  1492  00F2  0008               	return
  1493  00F3                     __end_of_isCorrect:	
  1494                           
  1495                           	psect	text6
  1496  01FD                     __ptext6:	
  1497 ;; *************** function ___wmul *****************
  1498 ;; Defined at:
  1499 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\Umul16.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;  multiplier      2    1[COMMON] unsigned int 
  1502 ;;  multiplicand    2    3[COMMON] unsigned int 
  1503 ;; Auto vars:     Size  Location     Type
  1504 ;;  product         2    5[COMMON] unsigned int 
  1505 ;; Return value:  Size  Location     Type
  1506 ;;                  2    1[COMMON] unsigned int 
  1507 ;; Registers used:
  1508 ;;		wreg, status,2, status,0
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1514 ;;      Params:         4       0       0       0
  1515 ;;      Locals:         2       0       0       0
  1516 ;;      Temps:          0       0       0       0
  1517 ;;      Totals:         6       0       0       0
  1518 ;;Total ram usage:        6 bytes
  1519 ;; Hardware stack levels used:    1
  1520 ;; Hardware stack levels required when called:    1
  1521 ;; This function calls:
  1522 ;;		Nothing
  1523 ;; This function is called by:
  1524 ;;		_isCorrect
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528                           
  1529                           ;psect for function ___wmul
  1530  01FD                     ___wmul:	
  1531                           
  1532                           ;incstack = 0
  1533                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1534  01FD  01F5               	clrf	___wmul@product
  1535  01FE  01F6               	clrf	___wmul@product+1
  1536  01FF                     l796:	
  1537  01FF  1C71               	btfss	___wmul@multiplier,0
  1538  0200  2A05               	goto	l226
  1539  0201  0873               	movf	___wmul@multiplicand,w
  1540  0202  07F5               	addwf	___wmul@product,f
  1541  0203  0874               	movf	___wmul@multiplicand+1,w
  1542  0204  3DF6               	addwfc	___wmul@product+1,f
  1543  0205                     l226:	
  1544  0205  3001               	movlw	1
  1545  0206                     u315:	
  1546  0206  35F3               	lslf	___wmul@multiplicand,f
  1547  0207  0DF4               	rlf	___wmul@multiplicand+1,f
  1548  0208  0B89               	decfsz	9,f
  1549  0209  2A06               	goto	u315
  1550  020A  3001               	movlw	1
  1551  020B                     u325:	
  1552  020B  36F2               	lsrf	___wmul@multiplier+1,f
  1553  020C  0CF1               	rrf	___wmul@multiplier,f
  1554  020D  0B89               	decfsz	9,f
  1555  020E  2A0B               	goto	u325
  1556  020F  0871               	movf	___wmul@multiplier,w
  1557  0210  0472               	iorwf	___wmul@multiplier+1,w
  1558  0211  1D03               	btfss	3,2
  1559  0212  29FF               	goto	l796
  1560  0213  0876               	movf	___wmul@product+1,w
  1561  0214  00F2               	movwf	?___wmul+1
  1562  0215  0875               	movf	___wmul@product,w
  1563  0216  00F1               	movwf	?___wmul
  1564  0217  0008               	return
  1565  0218                     __end_of___wmul:	
  1566                           
  1567                           	psect	text7
  1568  0218                     __ptext7:	
  1569 ;; *************** function _beep *****************
  1570 ;; Defined at:
  1571 ;;		line 64 in file "DoorLockMain.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;  period          1    wreg     unsigned char 
  1574 ;;  cycles          1    1[COMMON] unsigned char 
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;  period          1    3[COMMON] unsigned char 
  1577 ;;  t               1    5[COMMON] unsigned char 
  1578 ;;  i               1    4[COMMON] unsigned char 
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      void 
  1581 ;; Registers used:
  1582 ;;		wreg, status,2, status,0
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1588 ;;      Params:         1       0       0       0
  1589 ;;      Locals:         3       0       0       0
  1590 ;;      Temps:          1       0       0       0
  1591 ;;      Totals:         5       0       0       0
  1592 ;;Total ram usage:        5 bytes
  1593 ;; Hardware stack levels used:    1
  1594 ;; Hardware stack levels required when called:    1
  1595 ;; This function calls:
  1596 ;;		Nothing
  1597 ;; This function is called by:
  1598 ;;		_playKnock
  1599 ;;		_checkKnocks
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           
  1604                           ;psect for function _beep
  1605  0218                     _beep:	
  1606                           
  1607                           ;incstack = 0
  1608                           ; Regs used in _beep: [wreg+status,2+status,0]
  1609                           ;beep@period stored from wreg
  1610  0218  00F3               	movwf	beep@period
  1611                           
  1612                           ;DoorLockMain.c: 65: unsigned char i;
  1613                           ;DoorLockMain.c: 66: unsigned char t;
  1614                           ;DoorLockMain.c: 67: for (i = cycles; i != 0; i --)
  1615  0219  0871               	movf	beep@cycles,w
  1616  021A  00F2               	movwf	??_beep
  1617  021B  0872               	movf	??_beep,w
  1618  021C  00F4               	movwf	beep@i
  1619  021D                     L1:	
  1620  021D  0874               	movf	beep@i,w
  1621  021E  1903               	btfsc	3,2
  1622  021F  0008               	return
  1623                           
  1624                           ;DoorLockMain.c: 68: {
  1625                           ;DoorLockMain.c: 69: LATA0 = !LATA0;
  1626  0220  3001               	movlw	1
  1627  0221  0022               	movlb	2	; select bank2
  1628  0222  068C               	xorwf	12,f
  1629                           
  1630                           ;DoorLockMain.c: 70: for (t = period; t != 0; t --);
  1631  0223  0873               	movf	beep@period,w
  1632  0224  00F2               	movwf	??_beep
  1633  0225  0872               	movf	??_beep,w
  1634  0226  00F5               	movwf	beep@t
  1635  0227  0875               	movf	beep@t,w
  1636  0228  1903               	btfsc	3,2
  1637  0229  2A2F               	goto	l836
  1638  022A                     l834:	
  1639  022A  3001               	movlw	1
  1640  022B  02F5               	subwf	beep@t,f
  1641  022C  0875               	movf	beep@t,w
  1642  022D  1D03               	btfss	3,2
  1643  022E  2A2A               	goto	l834
  1644  022F                     l836:	
  1645  022F  3001               	movlw	1
  1646  0230  02F4               	subwf	beep@i,f
  1647  0231  2A1D               	goto	L1
  1648  0232                     __end_of_beep:	
  1649                           
  1650                           	psect	text8
  1651  0232                     __ptext8:	
  1652 ;; *************** function _adConvert *****************
  1653 ;; Defined at:
  1654 ;;		line 51 in file "DoorLockMain.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;  chan            1    wreg     unsigned char 
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;  chan            1    1[COMMON] unsigned char 
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      unsigned char 
  1661 ;; Registers used:
  1662 ;;		wreg, status,2, status,0
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1668 ;;      Params:         0       0       0       0
  1669 ;;      Locals:         1       0       0       0
  1670 ;;      Temps:          0       0       0       0
  1671 ;;      Totals:         1       0       0       0
  1672 ;;Total ram usage:        1 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:    1
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_checkKnocks
  1679 ;;		_main
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           
  1684                           ;psect for function _adConvert
  1685  0232                     _adConvert:	
  1686                           
  1687                           ;incstack = 0
  1688                           ; Regs used in _adConvert: [wreg+status,2+status,0]
  1689                           ;adConvert@chan stored from wreg
  1690  0232  00F1               	movwf	adConvert@chan
  1691                           
  1692                           ;DoorLockMain.c: 52: ADON = 1;
  1693  0233  0021               	movlb	1	; select bank1
  1694  0234  141D               	bsf	29,0	;volatile
  1695                           
  1696                           ;DoorLockMain.c: 53: ADCON0 = (ADCON0 & 0b10000011);
  1697  0235  081D               	movf	29,w	;volatile
  1698  0236  3983               	andlw	131
  1699  0237  009D               	movwf	29	;volatile
  1700                           
  1701                           ;DoorLockMain.c: 54: ADCON0 = (ADCON0 | chan);
  1702  0238  081D               	movf	29,w	;volatile
  1703  0239  0471               	iorwf	adConvert@chan,w
  1704  023A  009D               	movwf	29	;volatile
  1705                           
  1706                           ;DoorLockMain.c: 55: _delay((unsigned long)((2)*(32000000/4000000.0)));
  1707  023B  3005               	movlw	5
  1708  023C                     u807:	
  1709  023C  0B89               	decfsz	9,f
  1710  023D  2A3C               	goto	u807
  1711  023E  0000               	nop
  1712                           
  1713                           ;DoorLockMain.c: 57: GO = 1;
  1714  023F  0021               	movlb	1	; select bank1
  1715  0240  149D               	bsf	29,1	;volatile
  1716  0241                     l81:	
  1717                           ;DoorLockMain.c: 58: while (GO);
  1718                           
  1719  0241  189D               	btfsc	29,1	;volatile
  1720  0242  2A41               	goto	l81
  1721                           
  1722                           ;DoorLockMain.c: 60: ADON = 0;
  1723  0243  101D               	bcf	29,0	;volatile
  1724                           
  1725                           ;DoorLockMain.c: 61: return (ADRESH);
  1726  0244  081C               	movf	28,w	;volatile
  1727  0245  0008               	return
  1728  0246                     __end_of_adConvert:	
  1729                           
  1730                           	psect	intentry
  1731  0004                     __pintentry:	
  1732 ;; *************** function _checkInterrupt *****************
  1733 ;; Defined at:
  1734 ;;		line 40 in file "DoorLockMain.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;		None
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;		None
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  1    wreg      void 
  1741 ;; Registers used:
  1742 ;;		wreg, status,2, status,0
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1748 ;;      Params:         0       0       0       0
  1749 ;;      Locals:         0       0       0       0
  1750 ;;      Temps:          1       0       0       0
  1751 ;;      Totals:         1       0       0       0
  1752 ;;Total ram usage:        1 bytes
  1753 ;; Hardware stack levels used:    1
  1754 ;; This function calls:
  1755 ;;		Nothing
  1756 ;; This function is called by:
  1757 ;;		Interrupt level 1
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761  0004                     _checkInterrupt:	
  1762                           
  1763                           ;incstack = 0
  1764  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1765                           
  1766                           ; Regs used in _checkInterrupt: [wreg+status,2+status,0]
  1767  0005  3180               	pagesel	$
  1768  0006  0020               	movlb	0	; select bank0
  1769  0007  087F               	movf	127,w
  1770  0008  00F0               	movwf	??_checkInterrupt
  1771                           
  1772                           ;DoorLockMain.c: 42: if(TMR0IF == 1){
  1773  0009  1D0B               	btfss	11,2	;volatile
  1774  000A  2815               	goto	i1l78
  1775                           
  1776                           ;DoorLockMain.c: 43: TMR0 = 100;
  1777  000B  3064               	movlw	100
  1778  000C  0095               	movwf	21	;volatile
  1779                           
  1780                           ;DoorLockMain.c: 44: TMR0IF = 0;
  1781  000D  110B               	bcf	11,2	;volatile
  1782                           
  1783                           ;DoorLockMain.c: 45: if(isCounting){
  1784  000E  0828               	movf	_isCounting,w
  1785  000F  1903               	btfsc	3,2
  1786  0010  2815               	goto	i1l78
  1787                           
  1788                           ;DoorLockMain.c: 46: time++;
  1789  0011  3001               	movlw	1
  1790  0012  07A6               	addwf	_time,f
  1791  0013  3000               	movlw	0
  1792  0014  3DA7               	addwfc	_time+1,f
  1793  0015                     i1l78:	
  1794  0015  0870               	movf	??_checkInterrupt,w
  1795  0016  00FF               	movwf	127
  1796  0017  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1797  0018  0009               	retfie
  1798  0019                     __end_of_checkInterrupt:	
  1799  007E                     btemp	set	126	;btemp
  1800  007E                     int$flags	set	126
  1801  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80      6      25
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_checkKnocks
    _playKnock->_beep
    _isCorrect->___wmul

Critical Paths under _checkInterrupt in COMMON

    None.

Critical Paths under _main in BANK0

    _checkKnocks->_isCorrect

Critical Paths under _checkInterrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _checkInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _checkInterrupt in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1028
                                              9 COMMON     1     1      0
                          _adConvert
                        _checkKnocks
                               _init
                          _playKnock
                             _unlock
 ---------------------------------------------------------------------------------
 (1) _playKnock                                            2     2      0     288
                                              6 COMMON     2     2      0
                               _beep
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkKnocks                                          2     2      0     696
                                              7 COMMON     2     2      0
                          _adConvert
                               _beep
                          _isCorrect
                             _unlock
 ---------------------------------------------------------------------------------
 (1) _unlock                                               3     3      0      22
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _isCorrect                                            6     6      0     410
                                              0 BANK0      6     6      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     410
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _beep                                                 5     4      1     242
                                              1 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (2) _adConvert                                            1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _checkInterrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adConvert
   _checkKnocks
     _adConvert
     _beep
     _isCorrect
       ___wmul
     _unlock
   _init
   _playKnock
     _beep
   _unlock

 _checkInterrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      24       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      6      19       6       31.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      24      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Mon Jan 29 15:48:12 2018

                      _i 007A              __CFG_CP$OFF 0000                       l81 0241  
                     l96 01D2                       _GO 04E9      ___wmul@multiplicand 0073  
 __end_of_checkInterrupt 0019                      l226 0205                      l920 018B  
                    l834 022A                      l914 017F                      l922 0167  
                    l836 022F                      l846 01C1                      l796 01FF  
                    l992 0045                      _GIE 005F                      u315 0206  
                    u325 020B             __CFG_CPD$OFF 0000                      u605 006C  
                    u615 009C                      u625 00B5                      u650 00F1  
                    u635 00E0                      u807 023C                      u737 0197  
                    u747 01B5                      u757 0182                      u767 00F6  
                    u777 0138                      u787 01C9                      u797 01DA  
           __CFG_BORV$LO 0000                      wreg 0009             __CFG_LVP$OFF 0000  
                   l1004 00A0                     l1014 00E4                     l1030 010E  
                   l1016 0047                     l1018 00EB                     l1050 0151  
                   l1034 0115                     l1028 0100                     l1046 013D  
                   l1072 01B4                     l1066 01A5                     _ADON 04E8  
                   _LATA 010C                     i1l78 0015                     _TMR0 0015  
                   _WPUA 020C             __CFG_WRT$OFF 0000                     _beep 0218  
                   _code 002B                     _main 0190                     _init 01E2  
                   _time 0026                     fsr0h 0005                     fsr1h 0007  
                   fsr0l 0004                     indf1 0001                     fsr1l 0006  
                   btemp 007E                     start 0019            __CFG_IESO$OFF 0000  
          __CFG_PLLEN$ON 0000          ?_checkInterrupt 0070                    ?_beep 0071  
                  ?_main 0070                    ?_init 0070                    _LATA0 0860  
                  _LATA2 0862                    _LATA5 0865                    _PORTA 000C  
                  _TRISA 008C     __size_of_checkKnocks 0073            __CFG_PWRTE$ON 0000  
         __CFG_FCMEN$OFF 0000                    beep@i 0074                    beep@t 0075  
         __CFG_BOREN$OFF 0000                    status 0003                    wtemp0 007E  
         __CFG_MCLRE$OFF 0000          __initialization 001B             __end_of_beep 0232  
           __end_of_main 01B9             __end_of_init 01FD                   ??_beep 0072  
                 ??_main 0079                   ??_init 0071                   _ADCON0 009D  
                 _ADCON1 009E                   _ADRESH 009C                   _ANSELA 018C  
                 _INTCON 000B                   _OSCCON 0099                   _TMR0IF 005A  
                 _WDTCON 0097                   ___wmul 01FD           __CFG_STVREN$ON 0000  
                 _knocks 0020                   _unlock 01B9       __size_of_adConvert 0014  
__end_of__initialization 0032           __pcstackCOMMON 0070             __pidataBANK0 0246  
     __size_of_isCorrect 00BD               __pbssBANK0 0020               _codeLength 0032  
             __pmaintext 0190        __end_of_adConvert 0246         ??_checkInterrupt 0070  
                ?___wmul 0071       __size_of_playKnock 002A               __pintentry 0004  
                ?_unlock 0070               beep@cycles 0071               beep@period 0073  
             _isCounting 0028        __end_of_isCorrect 00F3          __size_of___wmul 001B  
          ??_checkKnocks 0077                  __ptext1 0166                  __ptext2 01E2  
                __ptext3 00F3                  __ptext4 01B9                  __ptext5 0036  
                __ptext6 01FD                  __ptext7 0218                  __ptext8 0232  
             _knockEnded 0030          __size_of_unlock 0029               _knockIndex 0029  
      __end_of_playKnock 0190     end_of_initialization 0032                  init_ram 024E  
                initloop 024F         __CFG_FOSC$INTOSC 0000      __end_of_checkKnocks 0166  
         __end_of___wmul 0218           __end_of_unlock 01E2      start_initialization 001B  
               ??___wmul 0075              __pdataBANK0 002B                _adConvert 0232  
            _checkKnocks 00F3                 ??_unlock 0071              __pbssCOMMON 007A  
              ___latbits 0001            __pcstackBANK0 0033               playKnock@j 0077  
              _isCorrect 0036               ?_adConvert 0070         __CFG_WDTE$SWDTEN 0000  
         ___wmul@product 0075                _playKnock 0166               ?_isCorrect 0070  
      ___wmul@multiplier 0071  __size_of_checkInterrupt 0015               ?_playKnock 0070  
            ??_adConvert 0071                 _micInput 002A            __size_of_beep 001A  
          __size_of_main 0029            __size_of_init 001B                 int$flags 007E  
            ??_isCorrect 0033             ?_checkKnocks 0070                 intlevel1 0000  
            ??_playKnock 0076        __CFG_CLKOUTEN$OFF 0000            adConvert@chan 0071  
             _OPTION_REG 0095              _sensitivity 0031           _checkInterrupt 0004  
         unlock@duration 0073              _timerLength 002E  
